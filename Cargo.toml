[package]
name = "zero2prod"
version = "0.1.0"
edition = "2021"

[lib]
path = "src/lib.rs"

[[bin]]
path = "src/main.rs"
name = "zero2prod"

[dependencies]
actix-web = "4"
tokio = { version = "1", features = ["macros", "rt-multi-thread"] }
config = { version = "0.13", default-features = false, features = ["yaml"] }
uuid = { version = "0.8.1", features = ["v4", "serde"] }
chrono = { version = "0.4.22", default-features = false, features = ["clock"] }
log = "0.4"
tracing = "0.1.19"
tracing-subscriber = { version = "0.3", features = ["registry", "env-filter"] }
tracing-bunyan-formatter = "0.3.0"
tracing-log = "0.1.1"
secrecy = { version = "0.8", features = ["serde"] }
tracing-actix-web = "0.7"
serde-aux = "4"
unicode-segmentation = "1.7.1"
claim = "0.5"
validator = "0.14"
reqwest = { version = "0.11", default-features = false, features = [
    "json",
    "rustls-tls",
] }
rand = { version = "0.8", features = ["std_rng"], default-features = false }
serde = "1.0.15"
thiserror = "1"
anyhow = "1"
base64 = "0.13"
sha3 = "0.9"

[dependencies.sqlx]
version = "0.5.7"
default-features = false
features = [
    "runtime-actix-rustls", # use the actix runtime futures and rustls as TLS backend;
    "macros",               # access to sqlx::query! and sqlx::query_as!
    "postgres",
    "uuid",                 # mapping SQL UUIDs to the Uuid type
    "chrono",               # mapping SQL timestamptz to the DateTime<T>
    "migrate",              # access to sqlx-cli
    "offline",
]

[dev-dependencies]
once_cell = "1"
fake = "~2.3"
quickcheck = "0.9.2"
quickcheck_macros = "0.9.1"
tokio = { version = "1", features = ["rt", "macros"] }
wiremock = "0.5"
serde_json = "1"
linkify = "0.8"
